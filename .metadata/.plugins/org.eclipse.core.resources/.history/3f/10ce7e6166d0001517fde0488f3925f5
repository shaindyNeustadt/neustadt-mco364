package neustadt.mco364.colorku;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;

import javax.swing.BorderFactory;
import javax.swing.JComponent;

public class Square extends JComponent {
	private Color color;
	private static Color[] colorArray;

	public Square(int colorNumber) {
		colorArray = new Color[9];
		colorArray[0] = Color.RED;
		colorArray[1] = Color.ORANGE;
		colorArray[2] = Color.YELLOW;
		colorArray[3] = Color.GREEN;
		colorArray[4] = Color.BLUE;
		colorArray[5] = Color.CYAN;
		colorArray[6] = Color.PINK;
		colorArray[7] = Color.WHITE;
		colorArray[8] = Color.BLACK;
		
		this.setOpaque(true);
		
		if(colorNumber > 0){
		this.color = colorArray[colorNumber - 1];
		//this.setBackground(color);
		}		
		else{
			this.color = Color.getHSBColor(0, 0, .9F);
		}
		
		this.setBorder(BorderFactory.createLineBorder(Color.GRAY));
		
	}

	public void setColor(int colorNum, boolean userSet) {
		if(colorNum > 0){
		this.color = colorArray[colorNum - 1];
		this.setBackground(color);
		repaint();
		}
		
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		//if(color != null){
		g.setColor(color);
		g.fillRect(35, 35, getWidth(), getHeight());
		//}
		//for(int i = 0; i < 9; i++){
		//g.setColor(colorArray[i]);
		//g.fillRect(0, 0, 10, 10);
		//}
		//g.fillOval((getWidth() - 70) / 2, (getHeight() - 70) / 2, 70, 70);
	}
}
	//getContentPane().remove(choicePanel);
	//getContentPane().revalidate();